name: "CIFAR10_full"
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    batch_size: 32
  }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    batch_size: 100
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 9.99999974738e-05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
	name:"conv1_bn"
    type:"BatchNorm"
    bottom:"conv1"
    top: "conv1_bn"
    batch_norm_param{
    	use_global_stats:true
    }
}
layer {
	name: "scale_conv1"
    type: "Scale"
    bottom: "conv1_bn"
    top:"scale_conv1"
    scale_param{
    	bias_term:true
    }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "scale_conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 4.99999987369e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
	name:"conv2_bn"
    type:"BatchNorm"
    bottom:"conv2"
    top: "conv2_bn"
    batch_norm_param{
    	use_global_stats:true
    }
}
layer {
	name: "scale_conv2"
    type: "Scale"
    bottom: "conv2_bn"
    top:"scale_conv2"
    scale_param{
    	bias_term:true
    }
}


layer {
  name: "pool2"
  type: "Pooling"
  bottom: "scale_conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "pool2"
  top: "pool2"
}

layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 4.99999987369e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
	name:"conv3_bn"
    type:"BatchNorm"
    bottom:"conv3"
    top: "conv3_bn"
    batch_norm_param{
    	use_global_stats:true
    }
}
layer {
	name: "scale_conv3"
    type: "Scale"
    bottom: "conv3_bn"
    top:"scale_conv3"
    scale_param{
    	bias_term:true
    }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "scale_conv3"
  top: "scale_conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "scale_conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1.0
    decay_mult: 250.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    stage: "val"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
  exclude {
    stage: "deploy"
  }
}
layer {
  name: "softmax"
  type: "Softmax"
  bottom: "ip1"
  top: "softmax"
  include {
    stage: "deploy"
  }
}